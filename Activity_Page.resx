<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>